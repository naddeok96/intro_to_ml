#  _                            _____  _   _  _   _  __   _____  ___  ___ _     
# | |                          /  __ \| \ | || \ | | \ \ / / _ \ |  \/  || |    
# | |     __ _ _ __ __ _  ___  | /  \/|  \| ||  \| |  \ V / /_\ \| .  . || |    
# | |    / _` | '__/ _` |/ _ \ | |    | . ` || . ` |   \ /|  _  || |\/| || |    
# | |___| (_| | | | (_| |  __/ | \__/\| |\  || |\  |   | || | | || |  | || |____
# \_____/\__,_|_|  \__, |\___|  \____/\_| \_/\_| \_/   \_/ \_| |/\_|  |_/ \_____/
#                    _/ |                                                       
#                  |___/                                                        

# Configuration for MNIST model
model_type: CNN

# Number of input channels (grayscale images have 1 channel)
input_channels: 1

# Number of output classes (MNIST has 10 classes: digits 0-9)
num_classes: 10

# Convolutional layers
conv_layers:
  # Conv Layer 1: Input=28x28x1, Output=28x28x64
  - { out_channels: 64, kernel_size: 3, stride: 1, padding: 1, batch_norm: True, max_pool: True }
  
  # Conv Layer 2: Input=28x28x64, Output=28x28x128
  - { out_channels: 128, kernel_size: 3, stride: 1, padding: 1, batch_norm: False, max_pool: True }

  # Conv Layer 3: Input=28x28x128, Output=28x28x256
  - { out_channels: 256, kernel_size: 3, stride: 1, padding: 1, batch_norm: True, max_pool: False }

  # Conv Layer 4: Input=28x28x256, Output=28x28x512
  - { out_channels: 512, kernel_size: 3, stride: 1, padding: 1, batch_norm: False, max_pool: False }

# Fully connected layers
fc_layers:
  # FC Layer 1: 512 neurons
  - 512
  
  # FC Layer 2: 256 neurons
  - 256

  # FC Layer 3: 128 neurons
  - 128
  
  # FC Layer 4: 64 neurons
  - 64
